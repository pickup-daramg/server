plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.epages.restdocs-api-spec' version '0.18.2'
}

group = 'com.daramg'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'
	testImplementation 'com.epages:restdocs-api-spec-restassured:0.18.2'
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
	//implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

openapi3{
	server = 'http://localhost:8080'
	//server = 추가
	title = "Pickup Daramg's API docs"
	description = '픽업하는 다람쥐의 API 문서입니다.'
	version = '0.1.0'
	format = 'yaml'
}

tasks.register('copyOasToSwagger', Copy) {
	// 기존 yaml 파일 삭제
	delete 'src/main/resources/static/swagger-ui/openapi3.yaml'

	// 복제할 yaml 파일 타겟팅
	from "build/api-spec/openapi3.yaml"

	// 타겟 디렉토리로 파일 복제
	into 'src/main/resources/static/swagger-ui'

	//test가 먼저 실행되도록 설정
	dependsOn tasks.named('test')

	// openapi3 task가 먼저 실행되도록 설정
	dependsOn tasks.named('openapi3')
}